var documenterSearchIndex = {"docs":
[{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"using Roentgen, RoentgenPlots, FileIO, Plots\nmlc, jaws = load(\"assets/plot-data.jld2\", \"mlc\", \"jaws\")","category":"page"},{"location":"BeamLimitingDevices/#Beam-Limiting-Devices","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"","category":"section"},{"location":"BeamLimitingDevices/#Jaws","page":"Beam-Limiting Devices","title":"Jaws","text":"","category":"section"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"Calling plot_bld with jaws will plot a simple rectangle where the jaw positions lie,","category":"page"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"    plot_bld(jaws)","category":"page"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"plot_bld!(p, jaws::Jaws; kwargs...)","category":"page"},{"location":"BeamLimitingDevices/#RoentgenPlots.plot_bld!-Tuple{Any, Jaws}","page":"Beam-Limiting Devices","title":"RoentgenPlots.plot_bld!","text":"plot_bld!(p, jaws::Jaws; kwargs...)\n\nPlot the jaw positions.\n\nkwargs... are passed to Plots.jl plot\n\n\n\n\n\n","category":"method"},{"location":"BeamLimitingDevices/#Axes-Limits","page":"Beam-Limiting Devices","title":"Axes Limits","text":"","category":"section"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"As well as plotting the positions of the jaws, the axis limits can also be set based on the jaw positions,","category":"page"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"    axes_lims!(jaws)","category":"page"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"axes_lims!(p, jaws::Jaws; pad=10.)","category":"page"},{"location":"BeamLimitingDevices/#RoentgenPlots.axes_lims!-Tuple{Any, Jaws}","page":"Beam-Limiting Devices","title":"RoentgenPlots.axes_lims!","text":"axes_lims!(p, jaws::Jaws; pad=10.)\n\nSet the axes limits to the position of the jaws.\n\nBy default, a pad of 10 mm is added to each side.\n\n\n\n\n\n","category":"method"},{"location":"BeamLimitingDevices/#Multi-Leaf-Collimator","page":"Beam-Limiting Devices","title":"Multi-Leaf Collimator","text":"","category":"section"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"Calling plot_bld! with an MLC fills in the region obscured by the leaves.","category":"page"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"plot_bld(mlc)","category":"page"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"plot_bld!(p, mlc::MultiLeafCollimator; kwargs...)","category":"page"},{"location":"BeamLimitingDevices/#RoentgenPlots.plot_bld!-Tuple{Any, MultiLeafCollimator}","page":"Beam-Limiting Devices","title":"RoentgenPlots.plot_bld!","text":"plot_bld!(p, mlc::MultiLeafCollimator; kwargs...)\n\nPlot the aperture of a MultiLeafCollimator with leaf positions.\n\nFills the area obstructed by leaves, unless invert=true where it fills the open aperture.\n\nArgs:\n\ninvert: Fills the region not obscured by the leaves, defaults to false\nfill: Whether to fill, defaults to true\nfillalpha: Transparency of the fill, defaults to 0.1\nleaf_length: The length of the leaves, defaults to 125 mm\nFurther kwargs... are passed to Plots.jl plot()\n\n\n\n\n\n","category":"method"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"Here, plot_bld! is used to add to an existing figure:","category":"page"},{"location":"BeamLimitingDevices/","page":"Beam-Limiting Devices","title":"Beam-Limiting Devices","text":"plot_bld(mlc; label=\"Default\")\nplot_bld!(mlc+(25., 30.); invert=true, fillalpha=0.8, label=\"Inverted\")\nplot_bld!(mlc-(50., 50.); fill=false, label=\"No fill\")","category":"page"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"using Roentgen, RoentgenPlots, FileIO, Plots\nw, bixels = load(\"assets/plot-data.jld2\", \"w\", \"bixels\")","category":"page"},{"location":"Bixels/#Bixels","page":"Bixels","title":"Bixels","text":"","category":"section"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"Bixels are 2D rectangular elements defined on the isoplane. They are also plotted using plot_bld,","category":"page"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"plot_bld(Bixel(0., 0., 1., 2.))\nplot_bld!(Bixel(10., 5., 3., 2.))","category":"page"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"plot_bld!(p::AbstractPlot, bixel::Roentgen.AbstractBixel; kwargs...)","category":"page"},{"location":"Bixels/#RoentgenPlots.plot_bld!-Tuple{AbstractPlot, Roentgen.AbstractBixel}","page":"Bixels","title":"RoentgenPlots.plot_bld!","text":"plot_bld!(p, bixel::AbstractBixel[, value]; kwargs...)\n\nPlot a bixel.\n\nTo colour the bixel by a value (e.g. for a beamlet weight), can pass an optional value argument.\n\n\n\n\n\n","category":"method"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"The value of the bixel can also be plotted with a colourbar,","category":"page"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"plot_bld(Bixel(0., 0., 1., 2.), 0.5)\nplot_bld!(Bixel(10., 5., 3., 2.), 1.)\nplot_bld!(Bixel(-10., 2., 1., 1.), -0.1)","category":"page"},{"location":"Bixels/#Collections-of-Bixels","page":"Bixels","title":"Collections of Bixels","text":"","category":"section"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"As well as plotting individual bixels, a collection of bixels can be plotted using the same syntax,","category":"page"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"plot_bld(bixels)","category":"page"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"plot_bld!(p::AbstractPlot, bixels::AbstractArray{<:Roentgen.AbstractBixel}; kwargs...)","category":"page"},{"location":"Bixels/#RoentgenPlots.plot_bld!-Tuple{AbstractPlot, AbstractArray{<:Roentgen.AbstractBixel}}","page":"Bixels","title":"RoentgenPlots.plot_bld!","text":"plot_bld!(p, bixel::AbstractArray{<:AbstractBixel}[, value::AbstractArray]; kwargs...)\n\nPlot a collection of bixels.\n\nTo colour the bixels by a value (e.g. for a beamlet weight), can pass an optional value array.\n\n\n\n\n\n","category":"method"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"A vector of values (w) can also be supplied to colour the bixels,","category":"page"},{"location":"Bixels/","page":"Bixels","title":"Bixels","text":"plot_bld(bixels, w)","category":"page"},{"location":"#RoentgenPlots.jl","page":"RoentgenPlots.jl","title":"RoentgenPlots.jl","text":"","category":"section"},{"location":"","page":"RoentgenPlots.jl","title":"RoentgenPlots.jl","text":"RoentgenPlots.jl provides functions to plot datatypes defined in Roentgen.jl using Plots.jl.","category":"page"},{"location":"","page":"RoentgenPlots.jl","title":"RoentgenPlots.jl","text":"(Image: RoentgenPlots.jl example plot)","category":"page"},{"location":"","page":"RoentgenPlots.jl","title":"RoentgenPlots.jl","text":"RoentgenPlots.jl provides two methods for plotting beam-limiting device positions plot_bld and plot_bld! functions:","category":"page"},{"location":"","page":"RoentgenPlots.jl","title":"RoentgenPlots.jl","text":"plot_bld(bld::AbstractBeamLimitingDevice; kwargs...) takes beam-limiting device types as defined in Roentgen.jl and plots them on a new figure\nplot_bld!([p,] bld::AbstractBeamLimitingDevice; kwargs...) adds beam-limiting device plots to existing figures","category":"page"},{"location":"","page":"RoentgenPlots.jl","title":"RoentgenPlots.jl","text":"Following the notation used in Plots.jl, plot_bld creates a new figure, while plot_bld! adds to an existing plot (which can be specified by providing p).","category":"page"}]
}
